{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.InlineIcon = exports.Icon = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * Unique id counter\n *\n * @type {number}\n */\n\n\nvar idCounter = 0;\n/**\n * Regex used to split dimensions\n *\n * @type {RegExp}\n * @private\n */\n\nvar unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nvar unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\n/**\n * Attributes used for icon\n *\n * @type {string[]}\n */\n\nvar iconAttributes = ['width', 'height', 'inline', 'hFlip', 'vFlip', 'flip', 'rotate', 'align', 'color', 'box'];\n/**\n * Default attribute values\n *\n * @type {object}\n */\n\nvar defaultAttributes = {\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  hFlip: false,\n  vFlip: false\n};\n/**\n * Add missing properties to icon\n *\n * Important: in PHP version of this library this function is part of Collection class: Collection::addMissingAttributes()\n *\n * JavaScript version uses separate file so this function could be used in React and other components without loading\n * entire Collection class.\n *\n * @param {object} data\n * @return {object}\n */\n\nfunction normalize(data) {\n  // Object.create, compatible with IE11\n  var item = Object.create(null);\n  var key;\n\n  for (key in defaultAttributes) {\n    item[key] = defaultAttributes[key];\n  }\n\n  for (key in data) {\n    item[key] = data[key];\n  } // Attributes derived from other attributes\n\n\n  if (item.inlineTop === void 0) {\n    item.inlineTop = item.top;\n  }\n\n  if (item.inlineHeight === void 0) {\n    item.inlineHeight = item.height;\n  }\n\n  if (item.verticalAlign === void 0) {\n    // -0.143 if icon is designed for 14px height,\n    // otherwise assume icon is designed for 16px height\n    item.verticalAlign = item.height % 7 === 0 && item.height % 8 !== 0 ? -0.143 : -0.125;\n  }\n\n  return item;\n}\n/**\n * Get preserveAspectRatio attribute value\n *\n * @param {object} align\n * @return {string}\n * @private\n */\n\n\nfunction getAlignment(align) {\n  var result;\n\n  switch (align.horizontal) {\n    case 'left':\n      result = 'xMin';\n      break;\n\n    case 'right':\n      result = 'xMax';\n      break;\n\n    default:\n      result = 'xMid';\n  }\n\n  switch (align.vertical) {\n    case 'top':\n      result += 'YMin';\n      break;\n\n    case 'bottom':\n      result += 'YMax';\n      break;\n\n    default:\n      result += 'YMid';\n  }\n\n  result += align.slice ? ' slice' : ' meet';\n  return result;\n}\n/**\n * SVG class\n *\n * @see @iconify/json-tools/src/svg.js\n */\n\n\nvar SVG = /*#__PURE__*/function () {\n  /**\n   * Constructor\n   *\n   * @param icon Icon data\n   *  Use Collection.getIconData() to retrieve icon data\n   */\n  function SVG(icon) {\n    _classCallCheck(this, SVG);\n\n    this._item = icon;\n  }\n  /**\n   * Get SVG attributes\n   *\n   * @param {object} props Custom properties (same as query string in Iconify API)\n   * @returns {string}\n   */\n\n\n  _createClass(SVG, [{\n    key: \"getAttributes\",\n    value: function getAttributes(props) {\n      var item = this._item;\n\n      if (_typeof(props) !== 'object') {\n        props = Object.create(null);\n      } // Set data\n\n\n      var align = {\n        horizontal: 'center',\n        vertical: 'middle',\n        slice: false\n      };\n      var transform = {\n        rotate: item.rotate,\n        hFlip: item.hFlip,\n        vFlip: item.vFlip\n      };\n      var style = Object.create(null);\n      var attributes = Object.create(null); // Get width/height\n\n      var inline = props.inline === true || props.inline === 'true' || props.inline === '1';\n      var box = {\n        left: item.left,\n        top: inline ? item.inlineTop : item.top,\n        width: item.width,\n        height: inline ? item.inlineHeight : item.height\n      }; // Transformations\n\n      ['hFlip', 'vFlip'].forEach(function (key) {\n        if (props[key] !== void 0 && (props[key] === true || props[key] === 'true' || props[key] === '1')) {\n          transform[key] = !transform[key];\n        }\n      });\n\n      if (props.flip !== void 0) {\n        props.flip.toLowerCase().split(/[\\s,]+/).forEach(function (value) {\n          switch (value) {\n            case 'horizontal':\n              transform.hFlip = !transform.hFlip;\n              break;\n\n            case 'vertical':\n              transform.vFlip = !transform.vFlip;\n          }\n        });\n      }\n\n      if (props.rotate !== void 0) {\n        var value = props.rotate;\n\n        if (typeof value === 'number') {\n          transform.rotate += value;\n        } else if (typeof value === 'string') {\n          var units = value.replace(/^-?[0-9.]*/, '');\n\n          if (units === '') {\n            value = parseInt(value);\n\n            if (!isNaN(value)) {\n              transform.rotate += value;\n            }\n          } else if (units !== value) {\n            var split = false;\n\n            switch (units) {\n              case '%':\n                // 25% -> 1, 50% -> 2, ...\n                split = 25;\n                break;\n\n              case 'deg':\n                // 90deg -> 1, 180deg -> 2, ...\n                split = 90;\n            }\n\n            if (split) {\n              value = parseInt(value.slice(0, value.length - units.length));\n\n              if (!isNaN(value)) {\n                transform.rotate += Math.round(value / split);\n              }\n            }\n          }\n        }\n      } // Apply transformations to box\n\n\n      var transformations = [],\n          tempValue;\n\n      if (transform.hFlip) {\n        if (transform.vFlip) {\n          transform.rotate += 2;\n        } else {\n          // Horizontal flip\n          transformations.push('translate(' + (box.width + box.left) + ' ' + (0 - box.top) + ')');\n          transformations.push('scale(-1 1)');\n          box.top = box.left = 0;\n        }\n      } else if (transform.vFlip) {\n        // Vertical flip\n        transformations.push('translate(' + (0 - box.left) + ' ' + (box.height + box.top) + ')');\n        transformations.push('scale(1 -1)');\n        box.top = box.left = 0;\n      }\n\n      switch (transform.rotate % 4) {\n        case 1:\n          // 90deg\n          tempValue = box.height / 2 + box.top;\n          transformations.unshift('rotate(90 ' + tempValue + ' ' + tempValue + ')'); // swap width/height and x/y\n\n          if (box.left !== 0 || box.top !== 0) {\n            tempValue = box.left;\n            box.left = box.top;\n            box.top = tempValue;\n          }\n\n          if (box.width !== box.height) {\n            tempValue = box.width;\n            box.width = box.height;\n            box.height = tempValue;\n          }\n\n          break;\n\n        case 2:\n          // 180deg\n          transformations.unshift('rotate(180 ' + (box.width / 2 + box.left) + ' ' + (box.height / 2 + box.top) + ')');\n          break;\n\n        case 3:\n          // 270deg\n          tempValue = box.width / 2 + box.left;\n          transformations.unshift('rotate(-90 ' + tempValue + ' ' + tempValue + ')'); // swap width/height and x/y\n\n          if (box.left !== 0 || box.top !== 0) {\n            tempValue = box.left;\n            box.left = box.top;\n            box.top = tempValue;\n          }\n\n          if (box.width !== box.height) {\n            tempValue = box.width;\n            box.width = box.height;\n            box.height = tempValue;\n          }\n\n          break;\n      } // Calculate dimensions\n      // Values for width/height: null = default, 'auto' = from svg, false = do not set\n      // Default: if both values aren't set, height defaults to '1em', width is calculated from height\n\n\n      var customWidth = props.width ? props.width : null;\n      var customHeight = props.height ? props.height : null;\n      var width, height;\n\n      if (customWidth === null && customHeight === null) {\n        customHeight = '1em';\n      }\n\n      if (customWidth !== null && customHeight !== null) {\n        width = customWidth;\n        height = customHeight;\n      } else if (customWidth !== null) {\n        width = customWidth;\n        height = SVG.calculateDimension(width, box.height / box.width);\n      } else {\n        height = customHeight;\n        width = SVG.calculateDimension(height, box.width / box.height);\n      }\n\n      if (width !== false) {\n        attributes.width = width === 'auto' ? box.width : width;\n      }\n\n      if (height !== false) {\n        attributes.height = height === 'auto' ? box.height : height;\n      } // Add vertical-align for inline icon\n\n\n      if (inline && item.verticalAlign !== 0) {\n        style['vertical-align'] = item.verticalAlign + 'em';\n      } // Check custom alignment\n\n\n      if (props.align !== void 0) {\n        props.align.toLowerCase().split(/[\\s,]+/).forEach(function (value) {\n          switch (value) {\n            case 'left':\n            case 'right':\n            case 'center':\n              align.horizontal = value;\n              break;\n\n            case 'top':\n            case 'bottom':\n            case 'middle':\n              align.vertical = value;\n              break;\n\n            case 'crop':\n              align.slice = true;\n              break;\n\n            case 'meet':\n              align.slice = false;\n          }\n        });\n      } // Generate viewBox and preserveAspectRatio attributes\n\n\n      attributes.preserveAspectRatio = getAlignment(align);\n      attributes.viewBox = box.left + ' ' + box.top + ' ' + box.width + ' ' + box.height; // Generate body\n\n      var body = SVG.replaceIDs(item.body);\n\n      if (props.color !== void 0) {\n        body = body.replace(/currentColor/g, props.color);\n      }\n\n      if (transformations.length) {\n        body = '<g transform=\"' + transformations.join(' ') + '\">' + body + '</g>';\n      }\n\n      if (props.box === true || props.box === 'true' || props.box === '1') {\n        // Add transparent bounding box\n        body += '<rect x=\"' + box.left + '\" y=\"' + box.top + '\" width=\"' + box.width + '\" height=\"' + box.height + '\" fill=\"rgba(0, 0, 0, 0)\" />';\n      }\n\n      return {\n        attributes: attributes,\n        body: body,\n        style: style\n      };\n    }\n    /**\n     * Generate SVG\n     *\n     * @param {object} props Custom properties (same as query string in Iconify API)\n     * @param {boolean} [addExtra] True if extra attributes should be added to SVG.\n     *  Due to lack of functions in JavaScript for escaping attributes, it is your job to make sure key and value are both properly escaped. Default value is false.\n     * @returns {string}\n     */\n\n  }, {\n    key: \"getSVG\",\n    value: function getSVG(props, addExtra) {\n      var attributes = SVG.splitAttributes(props),\n          data = this.getAttributes(attributes.icon);\n      var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"'; // Add extra attributes - assume that their names and values are escaped\n\n      if (addExtra) {\n        Object.keys(attributes.node).forEach(function (attr) {\n          svg += ' ' + attr + '=\"' + attributes.node[attr] + '\"';\n        });\n      } // Add SVG attributes\n\n\n      Object.keys(data.attributes).forEach(function (attr) {\n        svg += ' ' + attr + '=\"' + data.attributes[attr] + '\"';\n      }); // Add style with 360deg transformation to style to prevent subpixel rendering bug\n\n      svg += ' style=\"-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);';\n      Object.keys(data.style).forEach(function (attr) {\n        svg += ' ' + attr + ': ' + data.style[attr] + ';';\n      });\n\n      if (props && props.style !== void 0) {\n        svg += props.style;\n      }\n\n      svg += '\">';\n      svg += data.body + '</svg>';\n      return svg;\n    }\n    /**\n     * Split attributes\n     *\n     * @param props\n     * @return {{icon: {}, node: {}}}\n     */\n\n  }], [{\n    key: \"splitAttributes\",\n    value: function splitAttributes(props) {\n      var result = {\n        icon: Object.create(null),\n        node: Object.create(null)\n      };\n      Object.keys(props).forEach(function (name) {\n        result[iconAttributes.indexOf(name) === -1 ? 'node' : 'icon'][name] = props[name];\n      });\n      return result;\n    }\n    /**\n     * Calculate second dimension when only 1 dimension is set\n     *\n     * @param {string|number} size One dimension (such as width)\n     * @param {number} ratio Width/height ratio.\n     *      If size == width, ratio = height/width\n     *      If size == height, ratio = width/height\n     * @param {number} [precision] Floating number precision in result to minimize output. Default = 100\n     * @return {string|number|null} Another dimension, null on error\n     */\n\n  }, {\n    key: \"calculateDimension\",\n    value: function calculateDimension(size, ratio, precision) {\n      if (ratio === 1) {\n        return size;\n      }\n\n      precision = precision === void 0 ? 100 : precision;\n\n      if (typeof size === 'number') {\n        return Math.ceil(size * ratio * precision) / precision;\n      } // split code into sets of strings and numbers\n\n\n      var split = size.split(unitsSplit);\n\n      if (split === null || !split.length) {\n        return null;\n      }\n\n      var results = [],\n          code = split.shift(),\n          isNumber = unitsTest.test(code),\n          num;\n\n      while (true) {\n        if (isNumber) {\n          num = parseFloat(code);\n\n          if (isNaN(num)) {\n            results.push(code);\n          } else {\n            results.push(Math.ceil(num * ratio * precision) / precision);\n          }\n        } else {\n          results.push(code);\n        } // next\n\n\n        code = split.shift();\n\n        if (code === void 0) {\n          return results.join('');\n        }\n\n        isNumber = !isNumber;\n      }\n    }\n    /**\n     * Replace IDs in SVG output with unique IDs\n     * Fast replacement without parsing XML, assuming commonly used patterns.\n     *\n     * @param {string} body\n     * @return {string}\n     */\n\n  }, {\n    key: \"replaceIDs\",\n    value: function replaceIDs(body) {\n      var regex = /\\sid=\"(\\S+)\"/g,\n          ids = [],\n          match,\n          prefix;\n\n      function strReplace(search, replace, subject) {\n        var pos = 0;\n\n        while ((pos = subject.indexOf(search, pos)) !== -1) {\n          subject = subject.slice(0, pos) + replace + subject.slice(pos + search.length);\n          pos += replace.length;\n        }\n\n        return subject;\n      } // Find all IDs\n\n\n      while (match = regex.exec(body)) {\n        ids.push(match[1]);\n      }\n\n      if (!ids.length) {\n        return body;\n      }\n\n      prefix = 'IconifyId-' + Date.now().toString(16) + '-' + (Math.random() * 0x1000000 | 0).toString(16) + '-'; // Replace with unique ids\n\n      ids.forEach(function (id) {\n        var newID = prefix + idCounter;\n        idCounter++;\n        body = strReplace('=\"' + id + '\"', '=\"' + newID + '\"', body);\n        body = strReplace('=\"#' + id + '\"', '=\"#' + newID + '\"', body);\n        body = strReplace('(#' + id + ')', '(#' + newID + ')', body);\n      });\n      return body;\n    }\n  }]);\n\n  return SVG;\n}();\n/**\n * Create React component with SVG data\n *\n * @param {object} props\n * @param {boolean} inline\n * @return {null|React.Component}\n */\n\n\nfunction component(props, inline) {\n  if (_typeof(props.icon) !== 'object') {\n    return null;\n  } // Split properties into SVG properties and icon properties\n\n\n  var split = SVG.splitAttributes(props),\n      iconProps = split.icon,\n      customAttributes = split.node;\n  delete customAttributes.icon; // Set default inline value\n\n  if (iconProps.inline === void 0) {\n    iconProps.inline = inline;\n  } // Get SVG data\n\n\n  var svg = new SVG(normalize(props.icon));\n  var iconData = svg.getAttributes(iconProps); // Set style\n\n  var style = {\n    transform: 'rotate(360deg)'\n  };\n\n  if (iconData.style['vertical-align'] !== void 0) {\n    style.verticalAlign = iconData.style['vertical-align'];\n  }\n\n  if (props.style !== void 0) {\n    for (var _key in props.style) {\n      style[_key] = props.style[_key];\n    }\n  } // Generate element attributes\n\n\n  var attributes = {\n    xmlns: 'http://www.w3.org/2000/svg',\n    focusable: false,\n    style: style\n  };\n  var key;\n\n  for (key in customAttributes) {\n    attributes[key] = customAttributes[key];\n  }\n\n  for (key in iconData.attributes) {\n    attributes[key] = iconData.attributes[key];\n  }\n\n  attributes.dangerouslySetInnerHTML = {\n    __html: iconData.body\n  }; // Generate SVG\n\n  return _react[\"default\"].createElement('svg', attributes, null);\n}\n/**\n * Icon without vertical alignment\n *\n * @param {object} props\n * @return {React.Component}\n * @constructor\n */\n\n\nvar Icon = function Icon(props) {\n  return component(props, false);\n};\n/**\n * Icon with vertical alignment\n *\n * @param {object} props\n * @return {React.Component}\n * @constructor\n */\n\n\nexports.Icon = Icon;\n\nvar InlineIcon = function InlineIcon(props) {\n  return component(props, true);\n};\n/**\n * Default export\n */\n\n\nexports.InlineIcon = InlineIcon;\nvar _default = Icon;\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","InlineIcon","Icon","_react","_interopRequireDefault","require","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","idCounter","unitsSplit","unitsTest","iconAttributes","defaultAttributes","left","top","width","height","rotate","hFlip","vFlip","normalize","data","item","create","inlineTop","inlineHeight","verticalAlign","getAlignment","align","result","horizontal","vertical","slice","SVG","icon","_item","getAttributes","transform","style","attributes","inline","box","forEach","flip","toLowerCase","split","units","replace","parseInt","isNaN","Math","round","transformations","tempValue","push","unshift","customWidth","customHeight","calculateDimension","preserveAspectRatio","viewBox","body","replaceIDs","color","join","getSVG","addExtra","splitAttributes","svg","keys","node","attr","name","indexOf","size","ratio","precision","ceil","results","code","shift","isNumber","test","num","parseFloat","regex","ids","match","prefix","strReplace","search","subject","pos","exec","Date","now","toString","random","id","newID","component","iconProps","customAttributes","iconData","_key","xmlns","focusable","dangerouslySetInnerHTML","__html","createElement","_default"],"sources":["/Users/mandelasteele-dadzie/projects/courses/Code301/dev-portfolio/node_modules/@iconify/react/dist/icon.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.InlineIcon = exports.Icon = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Unique id counter\n *\n * @type {number}\n */\nvar idCounter = 0;\n/**\n * Regex used to split dimensions\n *\n * @type {RegExp}\n * @private\n */\n\nvar unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nvar unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\n/**\n * Attributes used for icon\n *\n * @type {string[]}\n */\n\nvar iconAttributes = ['width', 'height', 'inline', 'hFlip', 'vFlip', 'flip', 'rotate', 'align', 'color', 'box'];\n/**\n * Default attribute values\n *\n * @type {object}\n */\n\nvar defaultAttributes = {\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  hFlip: false,\n  vFlip: false\n};\n/**\n * Add missing properties to icon\n *\n * Important: in PHP version of this library this function is part of Collection class: Collection::addMissingAttributes()\n *\n * JavaScript version uses separate file so this function could be used in React and other components without loading\n * entire Collection class.\n *\n * @param {object} data\n * @return {object}\n */\n\nfunction normalize(data) {\n  // Object.create, compatible with IE11\n  var item = Object.create(null);\n  var key;\n\n  for (key in defaultAttributes) {\n    item[key] = defaultAttributes[key];\n  }\n\n  for (key in data) {\n    item[key] = data[key];\n  } // Attributes derived from other attributes\n\n\n  if (item.inlineTop === void 0) {\n    item.inlineTop = item.top;\n  }\n\n  if (item.inlineHeight === void 0) {\n    item.inlineHeight = item.height;\n  }\n\n  if (item.verticalAlign === void 0) {\n    // -0.143 if icon is designed for 14px height,\n    // otherwise assume icon is designed for 16px height\n    item.verticalAlign = item.height % 7 === 0 && item.height % 8 !== 0 ? -0.143 : -0.125;\n  }\n\n  return item;\n}\n/**\n * Get preserveAspectRatio attribute value\n *\n * @param {object} align\n * @return {string}\n * @private\n */\n\n\nfunction getAlignment(align) {\n  var result;\n\n  switch (align.horizontal) {\n    case 'left':\n      result = 'xMin';\n      break;\n\n    case 'right':\n      result = 'xMax';\n      break;\n\n    default:\n      result = 'xMid';\n  }\n\n  switch (align.vertical) {\n    case 'top':\n      result += 'YMin';\n      break;\n\n    case 'bottom':\n      result += 'YMax';\n      break;\n\n    default:\n      result += 'YMid';\n  }\n\n  result += align.slice ? ' slice' : ' meet';\n  return result;\n}\n/**\n * SVG class\n *\n * @see @iconify/json-tools/src/svg.js\n */\n\n\nvar SVG = /*#__PURE__*/function () {\n  /**\n   * Constructor\n   *\n   * @param icon Icon data\n   *  Use Collection.getIconData() to retrieve icon data\n   */\n  function SVG(icon) {\n    _classCallCheck(this, SVG);\n\n    this._item = icon;\n  }\n  /**\n   * Get SVG attributes\n   *\n   * @param {object} props Custom properties (same as query string in Iconify API)\n   * @returns {string}\n   */\n\n\n  _createClass(SVG, [{\n    key: \"getAttributes\",\n    value: function getAttributes(props) {\n      var item = this._item;\n\n      if (_typeof(props) !== 'object') {\n        props = Object.create(null);\n      } // Set data\n\n\n      var align = {\n        horizontal: 'center',\n        vertical: 'middle',\n        slice: false\n      };\n      var transform = {\n        rotate: item.rotate,\n        hFlip: item.hFlip,\n        vFlip: item.vFlip\n      };\n      var style = Object.create(null);\n      var attributes = Object.create(null); // Get width/height\n\n      var inline = props.inline === true || props.inline === 'true' || props.inline === '1';\n      var box = {\n        left: item.left,\n        top: inline ? item.inlineTop : item.top,\n        width: item.width,\n        height: inline ? item.inlineHeight : item.height\n      }; // Transformations\n\n      ['hFlip', 'vFlip'].forEach(function (key) {\n        if (props[key] !== void 0 && (props[key] === true || props[key] === 'true' || props[key] === '1')) {\n          transform[key] = !transform[key];\n        }\n      });\n\n      if (props.flip !== void 0) {\n        props.flip.toLowerCase().split(/[\\s,]+/).forEach(function (value) {\n          switch (value) {\n            case 'horizontal':\n              transform.hFlip = !transform.hFlip;\n              break;\n\n            case 'vertical':\n              transform.vFlip = !transform.vFlip;\n          }\n        });\n      }\n\n      if (props.rotate !== void 0) {\n        var value = props.rotate;\n\n        if (typeof value === 'number') {\n          transform.rotate += value;\n        } else if (typeof value === 'string') {\n          var units = value.replace(/^-?[0-9.]*/, '');\n\n          if (units === '') {\n            value = parseInt(value);\n\n            if (!isNaN(value)) {\n              transform.rotate += value;\n            }\n          } else if (units !== value) {\n            var split = false;\n\n            switch (units) {\n              case '%':\n                // 25% -> 1, 50% -> 2, ...\n                split = 25;\n                break;\n\n              case 'deg':\n                // 90deg -> 1, 180deg -> 2, ...\n                split = 90;\n            }\n\n            if (split) {\n              value = parseInt(value.slice(0, value.length - units.length));\n\n              if (!isNaN(value)) {\n                transform.rotate += Math.round(value / split);\n              }\n            }\n          }\n        }\n      } // Apply transformations to box\n\n\n      var transformations = [],\n          tempValue;\n\n      if (transform.hFlip) {\n        if (transform.vFlip) {\n          transform.rotate += 2;\n        } else {\n          // Horizontal flip\n          transformations.push('translate(' + (box.width + box.left) + ' ' + (0 - box.top) + ')');\n          transformations.push('scale(-1 1)');\n          box.top = box.left = 0;\n        }\n      } else if (transform.vFlip) {\n        // Vertical flip\n        transformations.push('translate(' + (0 - box.left) + ' ' + (box.height + box.top) + ')');\n        transformations.push('scale(1 -1)');\n        box.top = box.left = 0;\n      }\n\n      switch (transform.rotate % 4) {\n        case 1:\n          // 90deg\n          tempValue = box.height / 2 + box.top;\n          transformations.unshift('rotate(90 ' + tempValue + ' ' + tempValue + ')'); // swap width/height and x/y\n\n          if (box.left !== 0 || box.top !== 0) {\n            tempValue = box.left;\n            box.left = box.top;\n            box.top = tempValue;\n          }\n\n          if (box.width !== box.height) {\n            tempValue = box.width;\n            box.width = box.height;\n            box.height = tempValue;\n          }\n\n          break;\n\n        case 2:\n          // 180deg\n          transformations.unshift('rotate(180 ' + (box.width / 2 + box.left) + ' ' + (box.height / 2 + box.top) + ')');\n          break;\n\n        case 3:\n          // 270deg\n          tempValue = box.width / 2 + box.left;\n          transformations.unshift('rotate(-90 ' + tempValue + ' ' + tempValue + ')'); // swap width/height and x/y\n\n          if (box.left !== 0 || box.top !== 0) {\n            tempValue = box.left;\n            box.left = box.top;\n            box.top = tempValue;\n          }\n\n          if (box.width !== box.height) {\n            tempValue = box.width;\n            box.width = box.height;\n            box.height = tempValue;\n          }\n\n          break;\n      } // Calculate dimensions\n      // Values for width/height: null = default, 'auto' = from svg, false = do not set\n      // Default: if both values aren't set, height defaults to '1em', width is calculated from height\n\n\n      var customWidth = props.width ? props.width : null;\n      var customHeight = props.height ? props.height : null;\n      var width, height;\n\n      if (customWidth === null && customHeight === null) {\n        customHeight = '1em';\n      }\n\n      if (customWidth !== null && customHeight !== null) {\n        width = customWidth;\n        height = customHeight;\n      } else if (customWidth !== null) {\n        width = customWidth;\n        height = SVG.calculateDimension(width, box.height / box.width);\n      } else {\n        height = customHeight;\n        width = SVG.calculateDimension(height, box.width / box.height);\n      }\n\n      if (width !== false) {\n        attributes.width = width === 'auto' ? box.width : width;\n      }\n\n      if (height !== false) {\n        attributes.height = height === 'auto' ? box.height : height;\n      } // Add vertical-align for inline icon\n\n\n      if (inline && item.verticalAlign !== 0) {\n        style['vertical-align'] = item.verticalAlign + 'em';\n      } // Check custom alignment\n\n\n      if (props.align !== void 0) {\n        props.align.toLowerCase().split(/[\\s,]+/).forEach(function (value) {\n          switch (value) {\n            case 'left':\n            case 'right':\n            case 'center':\n              align.horizontal = value;\n              break;\n\n            case 'top':\n            case 'bottom':\n            case 'middle':\n              align.vertical = value;\n              break;\n\n            case 'crop':\n              align.slice = true;\n              break;\n\n            case 'meet':\n              align.slice = false;\n          }\n        });\n      } // Generate viewBox and preserveAspectRatio attributes\n\n\n      attributes.preserveAspectRatio = getAlignment(align);\n      attributes.viewBox = box.left + ' ' + box.top + ' ' + box.width + ' ' + box.height; // Generate body\n\n      var body = SVG.replaceIDs(item.body);\n\n      if (props.color !== void 0) {\n        body = body.replace(/currentColor/g, props.color);\n      }\n\n      if (transformations.length) {\n        body = '<g transform=\"' + transformations.join(' ') + '\">' + body + '</g>';\n      }\n\n      if (props.box === true || props.box === 'true' || props.box === '1') {\n        // Add transparent bounding box\n        body += '<rect x=\"' + box.left + '\" y=\"' + box.top + '\" width=\"' + box.width + '\" height=\"' + box.height + '\" fill=\"rgba(0, 0, 0, 0)\" />';\n      }\n\n      return {\n        attributes: attributes,\n        body: body,\n        style: style\n      };\n    }\n    /**\n     * Generate SVG\n     *\n     * @param {object} props Custom properties (same as query string in Iconify API)\n     * @param {boolean} [addExtra] True if extra attributes should be added to SVG.\n     *  Due to lack of functions in JavaScript for escaping attributes, it is your job to make sure key and value are both properly escaped. Default value is false.\n     * @returns {string}\n     */\n\n  }, {\n    key: \"getSVG\",\n    value: function getSVG(props, addExtra) {\n      var attributes = SVG.splitAttributes(props),\n          data = this.getAttributes(attributes.icon);\n      var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"'; // Add extra attributes - assume that their names and values are escaped\n\n      if (addExtra) {\n        Object.keys(attributes.node).forEach(function (attr) {\n          svg += ' ' + attr + '=\"' + attributes.node[attr] + '\"';\n        });\n      } // Add SVG attributes\n\n\n      Object.keys(data.attributes).forEach(function (attr) {\n        svg += ' ' + attr + '=\"' + data.attributes[attr] + '\"';\n      }); // Add style with 360deg transformation to style to prevent subpixel rendering bug\n\n      svg += ' style=\"-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);';\n      Object.keys(data.style).forEach(function (attr) {\n        svg += ' ' + attr + ': ' + data.style[attr] + ';';\n      });\n\n      if (props && props.style !== void 0) {\n        svg += props.style;\n      }\n\n      svg += '\">';\n      svg += data.body + '</svg>';\n      return svg;\n    }\n    /**\n     * Split attributes\n     *\n     * @param props\n     * @return {{icon: {}, node: {}}}\n     */\n\n  }], [{\n    key: \"splitAttributes\",\n    value: function splitAttributes(props) {\n      var result = {\n        icon: Object.create(null),\n        node: Object.create(null)\n      };\n      Object.keys(props).forEach(function (name) {\n        result[iconAttributes.indexOf(name) === -1 ? 'node' : 'icon'][name] = props[name];\n      });\n      return result;\n    }\n    /**\n     * Calculate second dimension when only 1 dimension is set\n     *\n     * @param {string|number} size One dimension (such as width)\n     * @param {number} ratio Width/height ratio.\n     *      If size == width, ratio = height/width\n     *      If size == height, ratio = width/height\n     * @param {number} [precision] Floating number precision in result to minimize output. Default = 100\n     * @return {string|number|null} Another dimension, null on error\n     */\n\n  }, {\n    key: \"calculateDimension\",\n    value: function calculateDimension(size, ratio, precision) {\n      if (ratio === 1) {\n        return size;\n      }\n\n      precision = precision === void 0 ? 100 : precision;\n\n      if (typeof size === 'number') {\n        return Math.ceil(size * ratio * precision) / precision;\n      } // split code into sets of strings and numbers\n\n\n      var split = size.split(unitsSplit);\n\n      if (split === null || !split.length) {\n        return null;\n      }\n\n      var results = [],\n          code = split.shift(),\n          isNumber = unitsTest.test(code),\n          num;\n\n      while (true) {\n        if (isNumber) {\n          num = parseFloat(code);\n\n          if (isNaN(num)) {\n            results.push(code);\n          } else {\n            results.push(Math.ceil(num * ratio * precision) / precision);\n          }\n        } else {\n          results.push(code);\n        } // next\n\n\n        code = split.shift();\n\n        if (code === void 0) {\n          return results.join('');\n        }\n\n        isNumber = !isNumber;\n      }\n    }\n    /**\n     * Replace IDs in SVG output with unique IDs\n     * Fast replacement without parsing XML, assuming commonly used patterns.\n     *\n     * @param {string} body\n     * @return {string}\n     */\n\n  }, {\n    key: \"replaceIDs\",\n    value: function replaceIDs(body) {\n      var regex = /\\sid=\"(\\S+)\"/g,\n          ids = [],\n          match,\n          prefix;\n\n      function strReplace(search, replace, subject) {\n        var pos = 0;\n\n        while ((pos = subject.indexOf(search, pos)) !== -1) {\n          subject = subject.slice(0, pos) + replace + subject.slice(pos + search.length);\n          pos += replace.length;\n        }\n\n        return subject;\n      } // Find all IDs\n\n\n      while (match = regex.exec(body)) {\n        ids.push(match[1]);\n      }\n\n      if (!ids.length) {\n        return body;\n      }\n\n      prefix = 'IconifyId-' + Date.now().toString(16) + '-' + (Math.random() * 0x1000000 | 0).toString(16) + '-'; // Replace with unique ids\n\n      ids.forEach(function (id) {\n        var newID = prefix + idCounter;\n        idCounter++;\n        body = strReplace('=\"' + id + '\"', '=\"' + newID + '\"', body);\n        body = strReplace('=\"#' + id + '\"', '=\"#' + newID + '\"', body);\n        body = strReplace('(#' + id + ')', '(#' + newID + ')', body);\n      });\n      return body;\n    }\n  }]);\n\n  return SVG;\n}();\n/**\n * Create React component with SVG data\n *\n * @param {object} props\n * @param {boolean} inline\n * @return {null|React.Component}\n */\n\n\nfunction component(props, inline) {\n  if (_typeof(props.icon) !== 'object') {\n    return null;\n  } // Split properties into SVG properties and icon properties\n\n\n  var split = SVG.splitAttributes(props),\n      iconProps = split.icon,\n      customAttributes = split.node;\n  delete customAttributes.icon; // Set default inline value\n\n  if (iconProps.inline === void 0) {\n    iconProps.inline = inline;\n  } // Get SVG data\n\n\n  var svg = new SVG(normalize(props.icon));\n  var iconData = svg.getAttributes(iconProps); // Set style\n\n  var style = {\n    transform: 'rotate(360deg)'\n  };\n\n  if (iconData.style['vertical-align'] !== void 0) {\n    style.verticalAlign = iconData.style['vertical-align'];\n  }\n\n  if (props.style !== void 0) {\n    for (var _key in props.style) {\n      style[_key] = props.style[_key];\n    }\n  } // Generate element attributes\n\n\n  var attributes = {\n    xmlns: 'http://www.w3.org/2000/svg',\n    focusable: false,\n    style: style\n  };\n  var key;\n\n  for (key in customAttributes) {\n    attributes[key] = customAttributes[key];\n  }\n\n  for (key in iconData.attributes) {\n    attributes[key] = iconData.attributes[key];\n  }\n\n  attributes.dangerouslySetInnerHTML = {\n    __html: iconData.body\n  }; // Generate SVG\n\n  return _react[\"default\"].createElement('svg', attributes, null);\n}\n/**\n * Icon without vertical alignment\n *\n * @param {object} props\n * @return {React.Component}\n * @constructor\n */\n\n\nvar Icon = function Icon(props) {\n  return component(props, false);\n};\n/**\n * Icon with vertical alignment\n *\n * @param {object} props\n * @return {React.Component}\n * @constructor\n */\n\n\nexports.Icon = Icon;\n\nvar InlineIcon = function InlineIcon(props) {\n  return component(props, true);\n};\n/**\n * Default export\n */\n\n\nexports.InlineIcon = InlineIcon;\nvar _default = Icon;\nexports[\"default\"] = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}